name: Build and Deploy
on:
  push:
    branches: [ master ]
jobs:
  build:
    name: Build Gamecenter-Client++
    runs-on: [ubuntu-latest]
    steps:
      - name: Import commit files
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and npm run build-prod-hostpoint
        run: |
          npm ci
          npm run build-prod-hostpoint
      - name: Upload bundle
        uses: actions/upload-artifact@master
        with:
          name: gamecenter-client
          path: dist/gamecenter-client
  cleanup:
    name: Remove bundle files from server
    runs-on: [ubuntu-latest]
    needs: [build]
    steps:
      - name: delete main-*.js, runtime-*.js, styles.*.css
        uses: StephanThierry/ftp-delete-action@v2.1
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          workingDir: .
          ignoreSsl: 1
          remoteFiles: "main-*.js;polyfills-*.js;runtime-*.js;styles.*.css"
  deploy:
    name: Deploy
    runs-on: [ubuntu-latest]
    needs: [cleanup]
    steps:
      - name: Download bundle
        uses: actions/download-artifact@master
        with:
          name: gamecenter-client
          path: dist/gamecenter-client
      - name: Deploy FTP
        uses: sebastianpopp/ftp-action@v2.0.0
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          forceSsl: true
          localDir: dist/gamecenter-client
          remoteDir: .
