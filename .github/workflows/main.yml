name: Build and Deploy
on:
  push:
    branches: [ master ]
jobs:
  build:
    name: Build Gamecenter-Client++
    runs-on: [ubuntu-latest]
    steps:
      - name: Import commit files
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and npm run build-prod-hostpoint
        run: |
          npm ci
          npm run build-prod-hostpoint
      - name: Upload bundle
        uses: actions/upload-artifact@master
        with:
          name: gamecenter-client
          path: dist/gamecenter-client
  deploy:
    name: Deploy
    runs-on: [ubuntu-latest]
    needs: [build]
    steps:
      - name: Download bundle
        uses: actions/download-artifact@master
        with:
          name: gamecenter-client
          path: dist/gamecenter-client
      - name: Deploy FTP
        uses: sebastianpopp/ftp-action@v2.0.0
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          forceSsl: true
          localDir: dist/gamecenter-client
          remoteDir: .
  cleanup:
    name: Remove old bundle files from server
    runs-on: [ubuntu-latest]
    needs: [deploy]
    steps:
      - name: Download bundle
        uses: actions/download-artifact@master
        with:
          name: gamecenter-client
          path: dist/gamecenter-client
      - name: Get hashes for main-*.js
        run: echo '::set-env name=_MAIN_HASH::$(ls dist/gamecenter-client | grep main- | head -n 1 | awk -F'[.]' '{print $2}')'
      - name: Get hashes for runtime-*.js
        run: echo '::set-env name=_RUNTIME_HASH::$(ls dist/gamecenter-client | grep runtime- | head -n 1 | awk -F'[.]' '{print $2}')'
      - name: Get hashes for polyfills-es5-*.js
        run: echo '::set-env name=_POLYFILLS_HASH::$(ls dist/gamecenter-client | grep polyfills-es5 | head -n 1 | awk -F'[.]' '{print $2}')'
      - name: Get hashes for polyfills-es2015-*.js
        run: echo '::set-env name=_POLYFILLS2015_HASH::$(ls dist/gamecenter-client | grep polyfills-es2015 | head -n 1 | awk -F'[.]' '{print $2}')'
      - name: Get hashes for styles.*.js
        run: echo '::set-env name=_STYLES_HASH::$(ls dist/gamecenter-client | grep styles. | head -n 1 | awk -F'[.]' '{print $2}')'
      - name: Debug env variables
        run: echo "$_MAIN_HASH / $_RUNTIME_HASH / $_POLYFILLS_HASH / $_POLYFILLS2015_HASH / $_STYLES_HASH"
      - name: delete main-*.js, runtime-*.js, styles.*.css
        uses: StephanThierry/ftp-delete-action@releases/v1
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          workingDir: .
          ignoreSsl: 1
          remoteFiles: "main*.!(${_MAIN_HASH}).js;polyfills-es5*.!(${_POLYFILLS_HASH}).js;polyfills-es2015*.!(${_POLYFILLS2015_HASH}).js;runtime-*.js;styles*.!(${_STYLES_HASH}).css"
